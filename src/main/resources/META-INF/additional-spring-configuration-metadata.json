{
    "properties": [
        {
            "name": "hangout.otel-collector.url",
            "type": "java.lang.String",
            "description": "URL of Open Telemetry collector. It is used to ship telemetry from app to telemetry backends"
        },
        {
            "name": "hangout.log.path",
            "type": "java.lang.String",
            "description": "Log Directory where ogs will be permanently stored"
        },
        {
            "name": "hangout.kafka.content.topic",
            "type": "java.lang.String",
            "description": "The kafka topic to produce event in, to indicate new multimedia content is available for processing"
        },
        {
            "name": "hangout.auth-service.url",
            "type": "java.lang.String",
            "description": "URL of auth service to authorize access tokens"
        },
        {
            "name": "hangout.media.upload-bucket",
            "type": "java.lang.String",
            "description": "The Minio/S3 bucket in which we will place the uploaded multimedia files for further processing"
        },
        {
            "name": "hangout.allowed-origins.url",
            "type": "java.lang.String",
            "description": "Comma seperated values of the frontend urls that we should allow"
        },
        {
            "name": "hangout.page-length",
            "type": "java.lang.Integer",
            "description": "Total number of items to be contained in a page for paginated responses"
        },
        {
            "name": "hangout.kafka.heart.topic",
            "type": "java.lang.String",
            "description": "The kafka topic to produce event in, to indicate new heart has been given to a post or taken form a post by a user"
        },
        {
            "name": "hangout.kafka.heart.maxPollRecords",
            "type": "java.lang.Integer",
            "description": "Indicates the number of records to fetch in one go per consumer"
        },
        {
            "name": "hangout.kafka.heart.fetchMinBytes",
            "type": "java.lang.Integer",
            "description": "Indicates the min number of bytes to fetch per consumer at minimum"
        },
        {
            "name": "hangout.kafka.heart.fetchMaxWaitMs",
            "type": "java.lang.Integer",
            "description": "Indicates the wait time for each consumer for more data to buffer"
        },
        {
            "name": "hangout.address-api.base-url",
            "type": "java.lang.String",
            "description": "Base URI of address api"
        },
        {
            "name": "hangout.address-api.api-key",
            "type": "java.lang.String",
            "description": "API Key of address api"
        },
        {
            "name": "aws.region",
            "type": "java.lang.String",
            "description": "Region where the s3 bucket is located"
        }
    ]
}